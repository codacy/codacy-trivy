version: 2.1

orbs:
  codacy: codacy/base@10.9.0
  codacy_plugins_test: codacy/plugins-test@1.1.1

commands:
  attach_run_command_and_persist:
    description: "Runs a command"
    parameters:
      cmd_name:
        description: The name of the command to run.
        type: string
      cmd:
        description: The command itself.
        type: string
    steps:
      - attach_workspace:
          at: ~/workdir
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: << parameters.cmd_name >>
          command: << parameters.cmd >>
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - '*'

jobs:
  build_and_publish_docker:
    docker:
      # https://hub.docker.com/r/cimg/base this image is the base image on which the docker commands will run
      - image: cimg/base:2023.04
    working_directory: ~/workdir
    steps:
      - attach_run_command_and_persist:
          cmd_name: Build and Publish a docker image
          cmd: |
            docker build -t $CIRCLE_PROJECT_REPONAME:latest .
            docker save --output docker-image.tar $CIRCLE_PROJECT_REPONAME:latest


  install_trivy_and_download_dbs:
    docker:
      # https://hub.docker.com/r/cimg/base this image is the base image on which the docker commands will run
      - image: cimg/base:2023.04
    working_directory: ~/workdir
    steps:
      - attach_run_command_and_persist:
          cmd_name: Install trivy and download DBs
          # https://aquasecurity.github.io/trivy/v0.45/getting-started/installation/#install-script
          cmd: |
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b . v0.44.1
            mkdir cache
            ./trivy --cache-dir ./cache image --download-db-only
          # For now this step is not necessary, please uncomment when needed
          # ./trivy --cache-dir ./cache image --download-java-db-only

workflows:
  version: 2
  compile_test_deploy:
    jobs:
      - codacy/checkout_and_version
      - codacy/shell:
          name: generate_and_test
          cmd: |
            go generate ./...
            go test ./...
          requires:
            - codacy/checkout_and_version
      - install_trivy_and_download_dbs:
          name: install_trivy_and_download_dbs
          requires:
            - generate_and_test
      - build_and_publish_docker:
          name: publish_docker_local
          requires:
            - install_trivy_and_download_dbs
      - codacy_plugins_test/run:
          name: plugins_test
          run_multiple_tests: true
          requires:
            - publish_docker_local
      - codacy/publish_docker:
          context: CodacyDocker
          requires:
            - plugins_test
          filters:
            branches:
              only:
                - master
      - codacy/tag_version:
          name: tag_version
          context: CodacyAWS
          requires:
            - codacy/publish_docker

  update_vulnerability_dbs:
    triggers:
      - schedule:
          # this is running at 3am everyday to avoid doing it at midnight (same time as nightly)
          cron: "* * * * *"
          filters:
            branches:
              ignore:
                - master
    jobs:
      - codacy/checkout_and_version
      - codacy/shell:
          name: generate_and_test
          cmd: |
            go generate ./...
            go test ./...
          requires:
            - codacy/checkout_and_version
      - install_trivy_and_download_dbs:
          name: install_trivy_and_download_dbs
          requires:
            - generate_and_test
      - build_and_publish_docker:
          name: publish_docker_local
          requires:
            - install_trivy_and_download_dbs
      - codacy_plugins_test/run:
          name: plugins_test
          run_multiple_tests: true
          requires:
            - publish_docker_local
      - codacy/publish_docker:
          name: publish_docker_hub
          context: CodacyDocker
          cmd: |
            docker load --input docker-image.tar
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker tag "$CIRCLE_PROJECT_REPONAME:latest" "codacy/$CIRCLE_PROJECT_REPONAME:$(cat .previous_version)"
            docker tag "$CIRCLE_PROJECT_REPONAME:latest" "codacy/$CIRCLE_PROJECT_REPONAME:latest"
            docker push --all-tags "codacy/$CIRCLE_PROJECT_REPONAME"
          requires:
            - plugins_test

      - codacy/mirror_to_ecr:
          context: CodacyAWS
          name: mirror_to_ecr_integration
          aws_profile: integration
          source_name: codacy/codacy-trivy
          mirror_name: codacy/codacy-trivy
          source_tag: $(cat .version)
          force: true
          requires:
            - publish_docker_hub
      - codacy/mirror_to_ecr:
          context: CodacyAWS
          name: mirror_to_ecr_staging
          aws_profile: staging
          source_name: codacy/codacy-trivy
          mirror_name: codacy/codacy-trivy
          source_tag: $(cat .version)
          force: true
          requires:
            - publish_docker_hub
      - codacy/mirror_to_ecr:
          context: CodacyAWS
          name: mirror_to_ecr_production
          aws_profile: production
          source_name: codacy/codacy-trivy
          mirror_name: codacy/codacy-trivy
          source_tag: $(cat .version)
          force: true
          requires:
            - publish_docker_hub

